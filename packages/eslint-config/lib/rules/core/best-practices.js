/* global module, require */

const {warningComments} = require('../../config.js');

module.exports = {
    'accessor-pairs': 'warn',
    'array-callback-return': ['error', {allowImplicit: true}],
    // var is prohibited anyway, so this shouldn't really affect anything
    'block-scoped-var': 'error',
    'class-methods-use-this': 'off',
    'complexity': 'warn',
    'consistent-return': 'error',
    'curly': 'error',
    'default-case': 'error',
    'default-case-last': 'warn',
    'default-param-last': 'warn',
    'dot-location': ['warn', 'property'],
    'dot-notation': 'warn',
    'eqeqeq': 'error',
    'grouped-accessor-pairs': 'error',
    'guard-for-in': 'warn',
    'max-classes-per-file': ['error', 1],
    'no-alert': 'error',
    'no-caller': 'error',
    'no-case-declarations': 'warn',
    'no-constructor-return': 'error',
    'no-div-regex': 'error',
    'no-else-return': ['error', {allowElseIf: false}],
    'no-empty-function': ['warn', {allow: ['constructors']}],
    'no-empty-pattern': 'error',
    'no-eq-null': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'warn',
    'no-extra-label': 'warn',
    'no-fallthrough': ['error', {commentPattern: '/falls?\\s?through/i'}],
    'no-floating-decimal': 'error',
    'no-global-assign': 'error',
    'no-implicit-coercion': 'warn',
    'no-implicit-globals': 'error',
    'no-implied-eval': 'error',
    'no-invalid-this': 'error',
    'no-iterator': 'error',
    'no-labels': 'off',
    'no-lone-blocks': 'warn',
    'no-loop-func': 'error',
    'no-magic-numbers': [
        'warn',
        {
            ignore: [
                -1,
                0,
                1,
            ],
        },
    ],
    'no-multi-spaces': [
        'error',
        {
            ignoreEOLComments: true,
            exceptions: {
                ImportDeclaration: true,
                Property: true,
                VariableDeclarator: true,
            },
        },
    ],
    'no-multi-str': 'error',
    'no-new': 'error',
    'no-new-func': 'error',
    'no-new-wrappers': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-param-reassign': [
        'warn',
        {
            props: true,
            ignorePropertyModificationsFor: ['draft', 'draftState'],
        },
    ],
    'no-proto': 'error',
    'no-redeclare': ['error', {builtinGlobals: true}],
    'no-restricted-properties': [
        'error',
        {
            object: 'arguments',
            property: 'callee',
            message: 'arguments.callee is deprecated',
        },
        {
            object: 'global',
            property: 'isFinite',
            message: 'Please use Number.isFinite instead',
        },
        {
            object: 'self',
            property: 'isFinite',
            message: 'Please use Number.isFinite instead',
        },
        {
            object: 'window',
            property: 'isFinite',
            message: 'Please use Number.isFinite instead',
        },
        {
            object: 'global',
            property: 'isNaN',
            message: 'Please use Number.isNaN instead',
        },
        {
            object: 'self',
            property: 'isNaN',
            message: 'Please use Number.isNaN instead',
        },
        {
            object: 'window',
            property: 'isNaN',
            message: 'Please use Number.isNaN instead',
        },
        {
            property: '__defineGetter__',
            message: 'Please use Object.defineProperty instead.',
        },
        {
            property: '__defineSetter__',
            message: 'Please use Object.defineProperty instead.',
        },
        {
            object: 'Math',
            property: 'pow',
            message: 'Use the exponentiation operator (**) instead.',
        },
    ],
    'no-return-assign': 'error',
    'no-return-await': 'warn',
    'no-script-url': 'error',
    'no-self-assign': ['error', {props: true}],
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-throw-literal': 'warn',
    'no-unmodified-loop-condition': 'warn',
    'no-unused-expressions': [
        'warn',
        {
            allowShortCircuit: true,
            allowTaggedTemplates: true,
            allowTernary: true,
        },
    ],
    'no-unused-labels': 'off',
    'no-useless-call': 'warn',
    'no-useless-catch': 'warn',
    'no-useless-concat': 'warn',
    'no-useless-escape': 'warn',
    'no-useless-return': 'warn',
    'no-void': 'error',
    'no-warning-comments': [
        'warn',
        {
            terms: warningComments,
            location: 'anywhere',
        },
    ],
    'no-with': 'error',
    'prefer-named-capture-group': 'warn',
    'prefer-promise-reject-errors': ['warn', {allowEmptyReject: true}],
    'prefer-regex-literals': ['warn', {disallowRedundantWrapping: true}],
    'radix': ['warn', 'always'],
    'require-await': 'warn',
    'require-unicode-regexp': 'warn',
    'vars-on-top': 'error',
    'wrap-iife': [
        'warn',
        'inside',
        {functionPrototypeMethods: true},
    ],
    'yoda': 'off',
};
